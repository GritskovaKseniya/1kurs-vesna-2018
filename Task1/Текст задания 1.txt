Добрый вечер! Высылаю задание по программированию. Его необязательно делать целиком к следующему занятию, но нужно хотя бы посмотреть и понимать, о чём идёт речь. Ещё лучше, если будут идеи, как эти задачки решить.
 
Задание состоит из 4 пунктов. Первые 2 обязательны, оставшиеся - дополнительный бонус.
 
В этом задании мы будем разбираться с понятием переменной и проверять её свойства. Как известно, переменная - это именованная область памяти. Но это ещё не всё. Каждая переменная относится к определённому типу данных, который описывает способ кодирования информации в отведённой памяти и набор допустимых операций.
 
Помимо этого, у переменной есть 2 важных свойства: область видимости и время существования. Обе этих вещи определяются блоком ( { } ), внутри которого объявлена переменная. Переменная видима только внутри блока, в котором она объявлена (включая вложенные блоки, но не в вызываемых функциях, т.к. это другие места текста программы). Аналогично переменная существует пока выполняется блок кода, в котором она объявлена (в частности, переменная живёт и при выполнении вызванных из её блока функций, однако в них она не видна по имени). После окончания выполнения блока кода память, выделенная под переменную, освобождается и может быть переиспользована для хранения других переменных.
 
Напишите программы, показывающие, что это действительно так. При этом нужно продемонстрировать не только косвенные признаки, но и вывести адреса памяти и их содержимое, а в комментариях написать соответствующие пояснения. Пример косвенного признака - вот я передал в целочисленный параметр функции переменную (её текущее значение 0), функция в параметр записала число 10, но сама переменная так и осталась 0.
 
1) Покажите, что переменная видима только в блоке, в котором она объявлена (и во вложенных блоках), но не в вызванной функции. Для этого передайте переменную в качестве параметра функции и покажите, что на самом деле передалась её копия.
 
2) Покажите, что переменная существует только во время выполнения блока, в котором она объявлена.
 
Подсказка: для этого надо спровоцировать ситуацию, когда область памяти, которую занимала переменная, будет перезаписана после окончания её существования. Здесь вам потребуется 2 вызова функции, внутри которой объявляется переменная - за ней вам и надо следить.
 
Доп.1) Дана функция:
 
int Func()
{
int result = 10;
return result;
}
 
Выясните, что происходит при выполнении операции return - возвращается ли сама переменная result или её копия?
 
Доп.2) Выясните, как кодируется переменная типа int в памяти (в частности, как кодируется знак числа).
 
Подсказка: при помощи sizeof() узнайте, сколько байт занимает тип int. Далее посмотрите на каждый байт в отдельности при помощи приведения к типу unsigned char. Можете освоить конструкцию union (http://www.c-cpp.ru/books/obedineniya) - с её помощью решить задачу будет немного проще.