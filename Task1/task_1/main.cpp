#include <iostream>
#include <cmath>
using namespace std;


void SetValue(int a, int value)
{
    setlocale(LC_ALL, "Russian");

    a = value;
    cout<<" "<<endl;
    cout<<"Результат функции: "<<endl;
    cout<<" k = "<<a<<endl;
    cout<<" m = "<<value<<endl;
}
int main()
{
     setlocale(LC_ALL, "Russian");

     int k = 0;
     int m = 10;

     cout<<" hello"<<endl;
     cout<<" Исходные данные: "<<endl;
     cout<<" k = "<<k<<endl;
     cout<<" m = "<<m<<endl;
/*
Создаем две переменные и кладем в них какие-то значения. Выводим их на экран, чтобы показать исходные данные.
После этого вызываем функцию SetValue, которую мы написали раньше. В неё передаются значения тех переменных,
которые мы объявили. Внутри  функции производятся действия, вследствии которых мы записываем значение одной
переменной в другую. Выводим результат функции на экран. Теперь одна переменная равна другой. Функция выполнена,
мы возвращаемся в main и выводим на экран значения переменных после выполнения функции. Мы видим, что они
совпадают с исходными данными, что доказывает предположение о том, что переменная существует только в теле
функции и при выходе из неё память очищается.
*/
     SetValue(k, m);

     cout<<" "<<endl;
     cout<<" Окончательный результат: "<<endl;
     cout<<" k = "<<k<<endl;
     cout<<" m = "<<m<<endl;
}
